
/* AWS Ec2 instance create - Configure Security Group */
Type:    SSH,    All TCP,   All UDP,   RDP,   All Traffic,   HTTP,    HTTPS



















/* Root access - Or use sudo */
Sudo su



/* update ubuntu */
sudo apt update


/*****************************
*
*  Step 01 - Install Apache
*
*****************************/
/* Apache2 */
sudo apt install apache2

/* Check in URL - Instance IP Address */
35.154.99.138

/* sudo ufw allow ‘Apache Full’ */
sudo ufw allow 'Apache Full'

/* Verify that the Apache service is running */
sudo systemctl status apache2







/*****************************
*
*  Step 02 - Install MySQL
*
*****************************/
/* Update */
sudo apt update



/*  Installing MySQL server */
sudo apt-get install mysql-server



/* Status Check */
sudo systemctl status mysql




/* Securing MySQL server in Apache */
sudo mysql_secure_installation


/* Go inside mysql */
sudo mysql



/* Set Password in root */
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'aws@9050';

FLUSH PRIVILEGES;

/* create new user (username is : administrator) */
GRANT ALL PRIVILEGES ON *.* TO 'administrator'@'localhost' IDENTIFIED BY 'aws@9050';




/* Check Mysql Working or Not */
sudo mysql -u root -p
[ENTER]
<Enter MySQL Password>









/*****************************
*
*  Mysql Root user rename
*
*****************************/
RENAME USER root@localhost TO YourNewRootUserNameHere@localhost;
FLUSH PRIVILEGES;











/*****************************
*
*  Step 03 - Install PHP 8
*
*****************************/
/*  */
sudo apt-get update


/* When your APT is updated then add this apt repository which holds PHP installing .deb packages. */
sudo add-apt-repository ppa:ondrej/php



/* So now as we set the repository for the php8, please run the below command to install PHP8 */
sudo apt-get install php8 -y libapache2-mod-php php-mysql php-curl php-gd php-json php-zip php-mbstring



/* Next, reboot the apache server. */
sudo systemctl restart apache2



/* Set apache to restart automatically when system reboots. */
sudo systemctl enable apache2



/* run the following command. */
php -v



/* "/var/www/html/info.php" */
<?php 
phpinfo();



/* Edit dir.conf File - After successfully installed PHP on ubuntu amazon ec2 instance. Now, you need to configure dir.conf file by using the following sudo nano command: */
sudo nano /etc/apache2/mods-enabled/dir.conf
It will look like this:  DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm
#Replace with this: DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm


/* Apache Restart */
service apache2 restart




/*****************************
*
*  Step 04 - Install Phpmyadmin
*
*****************************/
sudo apt-get update

sudo apt-get install mysql-server mysql-client
sudo apt-get install phpmyadmin






/*****************************
*
*  NOTE - Allowing MySQL Root Login Through phpMyAdmin
*
*****************************/
#This is an optional step and will allow the root MySQL user to login through phpMyAdmin.
sudo mysql -u root -p
#01.   Change authentication method for the root account to mysql_native_password by executing the following query.

#02.    ALTER USER 'root'@'localhost' IDENTIFIED WITH 'mysql_native_password' BY 'root__password__you__entered__while__installing__mysql';
#example
ALTER USER 'root'@'localhost' IDENTIFIED WITH 'mysql_native_password' BY 'password';

#03.    To put the changes into effect, execute the following query
FLUSH PRIVILEGES;

#04.     exit



/*****************************
*
*  NOTE  -  Phpmyadmin Not Found  (phpfact.com/phpmyadmin)
*
*****************************/
sudo su
sudo ln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-available/phpmyadmin.conf
sudo a2enconf phpmyadmin.conf
systemctl reload apache2
sudo systemctl restart apache2






/*****************************
*
*  NOTE  -  Change the ownership and access modes of the server directory.
*
*****************************/
sudo chown -R ubuntu /var/www/html
sudo chmod -R 755 /var/www/html





#Enjoy-Setup is Finished












/*****************************
*
*  NOTE  -  Create phpinfo.php
*
*****************************/
sudo chown -R ubuntu /var/www/html
sudo chmod -R 755 /var/www/html
echo "<?php phpinfo(); ?>" > /var/www/html/phpinfo.php


http://my.public.dns.amazonaws.com/phpinfo.php














// Tips And Tricks
/* Remove Php From Server */
sudo apt-get purge 'php*'
sudo apt-get purge php*
sudo apt-get purge php.*













/********* Php 7 Install ****************/
sudo apt -y install php7.4

/* php packages install */
sudo apt-get install -y php7.4-{bcmath,bz2,intl,gd,mbstring,mysql,zip}
sudo apt-get update
php -v


/* IMAP PHP Extension Install */
sudo apt-get install php7.4-imap
sudo systemctl restart apache2



/* Installing PHP 7.4 Extensions */
sudo apt install php7.4-cli php7.4-fpm php7.4-json php7.4-pdo php7.4-mysql php7.4-zip php7.4-gd  php7.4-mbstring php7.4-curl php7.4-xml php7.4-bcmath php7.4-json


sudo apt install php7.4-curl php7.4-json php7.4-gd php7.4-mbstring php7.4-intl php7.4-bcmath php7.4-bz2 php7.4-readline php7.4-zip


sudo apt install php7.4 php7.4-common php7.4-opcache php7.4-cli php7.4-gd php7.4-curl php7.4-mysql


/* Also Try */
sudo apt-get install php7.4-mcrypt php7.4-curl php7.4-gd php7.4_zip php7.4_xml php7.4_gd2 php7.4_iconv php7.4_simplexml php7.4_xmlreader  php7.4_zlib


/* And Also Install PHP */
sudo apt install php-xml
sudo apt install php7.4-gd
sudo apt install php7.4-mbstring
sudo apt install php-zip


/* Also Try to install  */
PHP extension php_zip enabled && PHP extension php_xml enabled && PHP extension php_gd2 enabled && PHP extension php_iconv enabled && PHP extension php_simplexml enabled && PHP extension php_xmlreader enabled && PHP extension php_zlib enabled










/* Restart Server */
sudo systemctl restart apache2
sudo a2enmod rewrite





php -v       #PHP 7.4.18


##In most cases, you will want to modify the way that Apache serves files when a directory is requested. Currently, if a user requests a directory from the server, Apache will first look for a file called index.html. We want to tell the web server to prefer PHP files over others, so make Apache look for an index.php file first.

	sudo nano /etc/apache2/mods-enabled/dir.conf
	
##Move the PHP index file (highlighted above) to the first position after the DirectoryIndex specification, like this:

	<IfModule mod_dir.c>
	    DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm
	</IfModule>	


/**************************************************/













/* Basic Tools for Ubuntu */
/* 1. Zip and unzip */
sudo apt-get install zip unzip
	/*
		Example:    unzip test.zip
	*/








/*****************************
*
*  Only Root (index) Working Other All pages 404 not found
*
*****************************/
// Trick 01
		(a).   nano /etc/apache2/apache2.conf
		/*
			AllowOverride None   to  AllowOverride All 
		*/
		(b).   sudo service httpd restart
		(c).   sudo systemctl restart apache2
		(d).   service apache2 restart
		
		
		
		
		
# service apache2 start
# service apache2 stop
# service apache2 status
# service apache2 restart








/********[  Only Homepage Working Other Pages 404 (codeignitor, Laravel)  ]***********/
// Homepage Works but Pages shows 404 error (apache)




sudo su
nano /etc/apache2/apache2.conf
edit AllowOverride None for /var/www/ to AllowOverride All



<Directory>
Options Indexes FollowSymLinks
AllowOverride All
Require all granted
</Directory>


sudo a2enmod rewrite
sudo service apache2 restart
systemctl restart apache2
sudo service apache2 restart
sudo /etc/init.d/apache2 restart






/* Full Permission With Subdirectory */

sudo chmod -R 777 html


















/* Only Root working other page 404 error */

<Directory /var/www/>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
</Directory>


#to


<Directory /var/www/html/>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
</Directory>



systemctl restart apache2
















/* Laravel permission step by step */

sudo chown -R ubuntu:www-data /path/to/workice
cd /path/to/workice
sudo find -type f -exec chmod 664 {} \;
sudo find -type d -exec chmod 775 {} \;
sudo chgrp -R www-data bootstrap/cache storage
sudo chmod -R ug+rwx bootstrap/cache storage